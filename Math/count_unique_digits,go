package main

import (
    "fmt"
)

func countNumbersWithUniqueDigits(n int) int {
    // Base case: n = 0, only 1 possible number (0)
    if n == 0 {
        return 1
    }
    
    // For n > 0, initialize count to 10 (digits 0-9)
    count := 10
    
    // Calculate count for 2 to n digits
    for i := 2; i <= n; i++ {
        // For each number of digits, calculate the number of possible unique numbers
        // First digit can be 1-9 (9 choices), subsequent digits can be any of the remaining 9-1 = 8 choices
        // Multiply the choices together to get the total number of possible unique numbers
        // Add this count to the total count
        currCount := 9
        for j := 1; j < i; j++ {
            currCount *= 10 - j
        }
        count += currCount
    }
    
    return count
}

func main() {
    // Test case with n = 2
    fmt.Println(countNumbersWithUniqueDigits(2)) // Output: 91
}
